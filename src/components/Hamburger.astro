---
interface Props {
	section?: string;
}

let isCs, isBio, isContact;

const {section} = Astro.props;
switch (section) {
    case 'case-studies':
        isCs = true;
        break;
    case 'bio':
        isBio = true;
        break;
    case 'contact':
        isContact = true;
        break;
}


---



<div class="hamburger self-end">
    <span class:list={[ 'case-studies',{active: isCs}] }></span>
    <span class:list={[ 'bio',{active: isBio}] }></span>
    <span class:list={[ 'contact',{active: isContact}] }></span>
</div>

<nav class="nav-links z-20 big">

  <ul class="mt-14">
    <li><a data-link="home" class='control' href="/">Home</a></li>
    <li><a data-link="cs" class:list={['control', 'case-studies',{active: isCs}] } href="/casestudies">Case Studies</a></li>
    <li><a data-link="bio" class:list={['control', 'bio',{active: isBio}] } href="/bio">Bio</a></li>
    <li><a data-link="contact" class:list={[ 'control','contact',{active: isContact}] }  href="/contact">Contact</a></li>
  </ul>
</nav>

<script>
document.addEventListener('astro:page-load', () => {

  /**
   * Toggles the 'expanded' class on the navigation menu when the hamburger icon is clicked.
   * Closes the menu when clicking outside with a fade-out effect.
   */
  const hamburger = document.querySelector('.hamburger');
  const navLinks = document.querySelector('.nav-links');
  const pageEl = document.querySelector('.page');
  const pageBgColor = getComputedStyle(pageEl).backgroundColor;

  if (hamburger && navLinks) {

    // Open/close menu on hamburger click
    hamburger.addEventListener('click', () => {
      pageEl.style.backgroundColor = 'white';

      if (!navLinks.classList.contains('expanded')) {
        navLinks.classList.add('fade-in');
        navLinks.classList.add('expanded');
        hamburger.classList.add('is-open'); // Change to "X"

      } else {

        pageEl.style.backgroundColor = pageBgColor;
        navLinks.classList.remove('fade-in');
        navLinks.classList.add('fade-out');
        hamburger.classList.remove('is-open'); // Revert to hamburger

        setTimeout(() => {
          navLinks.classList.remove('expanded', 'fade-out');
        }, 300); // Match the CSS animation duration
      }
    });

    // Close menu when clicking outside of it
    document.addEventListener('click', (event) => {
      if (!navLinks.contains(event.target) && !hamburger.contains(event.target) && navLinks.classList.contains('expanded')) {
        pageEl.style.backgroundColor = pageBgColor;
        navLinks.classList.remove('fade-in');
        navLinks.classList.add('fade-out');
        setTimeout(() => {
          navLinks.classList.remove('expanded', 'fade-out');
        }, 300); // Match the CSS animation duration
      }
    });
  } else {
    console.warn('Hamburger or nav-links element not found in the DOM.');
  }

  // dynamically set view-transition-name css property of each navLink to it's data-link attr onclick
  const anchors = navLinks.querySelectorAll('a');
  anchors.forEach((anchor) => {
    const transName = anchor.getAttribute('data-link'); 
    anchor.addEventListener('click', () => {
      anchor.style.viewTransitionName = transName;
      console.log(transName)
    });
  });
});

</script>
<style lang="styl">

  :root {
    view-transition-name: none;
  }

.hamburger
  cursor pointer
  transition all .2s ease-in-out
  .case-studies
    &.active
      background-color var(--color-case-studies)
  .bio
    &.active
      background-color var(--color-bio)
  .contact
    &.active
      background-color var(--color-contact)
  &:hover
    transform scale(1.2)
  span
    display block
    width 25px
    height 3px
    margin-bottom 3px
    background-color #000
    transition transform 0.3s ease, opacity 0.3s ease
  &.is-open
    span
      &:nth-child(1)
        transform translateY(8px) rotate(45deg)
      &:nth-child(2)
        opacity 0
      &:nth-child(3)
        transform translateY(-4px) rotate(-45deg)

body
  &:has(#bio)
    .hamburger
      &.is-open
        span
          &:nth-child(3)
            background-color var(--color-bio)
          

.nav-links
  width 100vw
  height 100vh
  position absolute
  top 3.8rem
  max-width 100%
  right 0
  background-color #fff
  xbox-shadow 0 0 10px rgba(0, 0, 0, .1)
  display none
  margin 0
  opacity 0
  transition opacity 0.3s ease
  pointer-events none
  .active 
    color white
    pointer-events none
    &.case-studies
      background-color var(--color-case-studies)
    &.bio
      background-color var(--color-bio)
    &.contact
      background-color var(--color-contact)
  &.expanded
    display unset
    pointer-events: auto; 
  a
    display block
    border-radius 15px
    text-decoration none
   &.fade-in 
      animation: fadeIn 0.3s ease forwards;
    &.fade-out 
      animation: fadeOut 0.3s ease forwards;
    
    


@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

</style>