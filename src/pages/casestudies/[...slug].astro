---
import { Image } from 'astro:assets';
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
// 1. Generate a new path for every collection entry

export async function getStaticPaths() {
  const posts = await getCollection('casestudies');
  return posts.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}
// 2. For your template, you can get the entry directly from the prop

const { entry } = Astro.props;
const { Content } = await entry.render();
const bgColor = entry.data.color;
const cover = entry.data.cover;


---

<script>
/*
Couldnt make this work as JS only progressive enhancement
Setting filter style via JS always ends up as final style
*/
function toggleHeroBlur() {
  const hero = document.querySelector('.hero');
  if (hero) {
    hero.classList.toggle('no-blur');
  }
}

document.addEventListener('astro:page-load', () => {
  toggleHeroBlur();
})

</script>


<Layout title=`${entry.data.title} | Alvar Web Development` bgColor={bgColor} section="case-studies">
    <div class="control prose page">
        <h1>{entry.data.title}</h1>
        
        {entry.data.tags && (
        <ul class='tags flex gap-2 list-none pl-0'>
            {entry.data.tags.map((tag) => (<li>{tag}</li> ))}
        </ul>
        )}

        
        <!-- <p>Written on: {frontmatter.date}</p>-->
    </div>
    <div class="hero" >

      {cover && <Image transition:name=`thumb-${entry.slug}`  class="hero__img" src={cover} alt="" />}
    </div>
  <div class="bgcolor">
    <div class="control prose">
      <Content />
    </div>
  </div>
</Layout>

<style define:vars={{bgColor}} lang="styl">
  .hero {
    filter: blur(10px); 
    transition: filter 1s ease-in-out; 
  }

  .hero.no-blur {
    filter: blur(0); 
  }


  X.hero
    Xbackground var(--bgColor)
    Xbackground #000
    &:hover 
      filter: blur(.75px);
    Ximg 
      width 100%
      mask-image: linear-gradient(180deg, transparent, #fff 14%);
      /* overlay 
      backdrop-filter: blur(6px);
      backdrop-filter: grayscale(70%);
      backdrop-filter: saturate(6);
      */

  h1  
    margin-bottom 0
  
  .tags 
    margin-top 5px
    li
      padding-left 0
      padding-right 10px
      color #406997
  
  .control 
    max-width 45rem
  

  .bgcolor {
    background-color: var(--bgColor);
  }

 ::marker {
    color: #000 !important
  }

</style>